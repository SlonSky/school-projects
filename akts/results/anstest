import cv2
import numpy as np
def pause():
  while cv2.waitKey(10) != ord('q'):
    continue

img = cv2.imread("ans1.jpg",0)
#todo: do not mark square out its bounds
height, width = img.shape[:2]
_,thresh = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY_INV + cv2.THRESH_OTSU)
cv2.imshow("morph", thresh)
im2, contours, hier = cv2.findContours(thresh.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

rects = []
for i in range(len(contours)):
  if(cv2.contourArea(contours[i]) < 0.01 * width* height):
    cv2.drawContours(thresh, contours, i, (0, 0, 0), -1)
  else:
    x,y,w,h = cv2.boundingRect(contours[i])
    rects.append([x,y,w,h])

rects.sort(key=lambda x: x[1])
index = -1
maxColor = 0
cv2.imshow("tr", thresh)
for i in range(len(rects)):
  x,y,w,h = tuple(rects[i])
  aver = np.average(thresh[y:y+h,x:x+w])
  # cv2.imshow("r", thresh[y:y+h,x:x+w])
  # pause()
  if aver > 0.3 * 255 and aver > maxColor :
    maxColor = aver
    index = i

print("answer at " + str(index+1))






cv2.drawContours(img, contours, -1, (255,0,0), 1)
cv2.imshow("r", img)
pause()
cv2.destroyAllWindows()
